[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 369.0627ms
[debug]           Load.loadUnit: plugins took 37.258ms
[debug]           Load.loadUnit: defsScala took 0.133ms
[debug] [Loading] Scanning directory C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.9337 ms
[debug]               Load.resolveProject(censusincome-build) took 20.6762ms
[debug]             Load.loadTransitive: finalizeProject(Project(id censusincome-build, base: C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome\project, plugins: List(<none>))) took 38.6473ms
[debug] [Loading] Done in C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome\project, returning: (censusincome-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 46.8564ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.1047ms
[debug]         Load.loadUnit(file:/C:/Personal/Code/GitHub/metu/metu-ceng790-term-project-census-income/CensusIncome/project/, ...) took 86.8214ms
[debug]       Load.apply: load took 196.4622ms
[debug]       Load.apply: resolveProjects took 2.8498ms
[debug]       Load.apply: finalTransforms took 25.0934ms
[debug]       Load.apply: config.delegates took 2.9064ms
[debug]       Load.apply: Def.make(settings)... took 204.7757ms
[debug]       Load.apply: structureIndex took 44.4964ms
[debug]       Load.apply: mkStreams took 1.5323ms
[info] loading project definition from C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 917.4554ms
[debug]     Load.loadUnit: defsScala took 0.0014ms
[debug] [Loading] Scanning directory C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome
[debug]       Load.loadUnit: mkEval took 3.2532ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7704 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.3789ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome, plugins: List(<none>))) took 2.6047ms
[debug] [Loading] Done in C:\Personal\Code\GitHub\metu\metu-ceng790-term-project-census-income\CensusIncome, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1189.9901ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.8811ms
[debug]   Load.loadUnit(file:/C:/Personal/Code/GitHub/metu/metu-ceng790-term-project-census-income/CensusIncome/, ...) took 2114.9593ms
[debug] Load.apply: load took 2125.4415ms
[debug] Load.apply: resolveProjects took 0.0563ms
[debug] Load.apply: finalTransforms took 3.4829ms
[debug] Load.apply: config.delegates took 0.1566ms
[debug] Load.apply: Def.make(settings)... took 70.5324ms
[debug] Load.apply: structureIndex took 9.5178ms
[debug] Load.apply: mkStreams took 0.0014ms
[info] set current project to CensusIncome (in build file:/C:/Personal/Code/GitHub/metu/metu-ceng790-term-project-census-income/CensusIncome/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-3ecf068ed790e282d863
[debug] Writing bsp connection file
[info] started sbt server
